version: '3.7'

services:
  app-server:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    environment:
      POSTGRES_PASSWORD: magical_password
    depends_on:
      - kafka
      - db-postgres
    networks:
      - backend
      - postgres

  db-postgres:
    image: postgres
    restart: unless-stopped
    env_file:
      - database.env
    ports:
      - "5432:5432"
    networks:
      - postgres
    volumes:
      - database-data:/var/lib/postgresql/data/

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  zoo:
    image: zookeeper:3.4.9
    restart: unless-stopped
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - ./full-stack/zoo/data:/data
      - ./full-stack/zoo/datalog:/datalog

  kafka:
    image: confluentinc/cp-kafka:5.4.1
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./full-stack/kafka/data:/var/lib/kafka/data
    depends_on:
      - zoo

volumes:
  database-data:
  pgadmin:

networks:
  backend:
  postgres: